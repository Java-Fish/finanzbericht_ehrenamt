name: 🚀 Release Build

on:
  push:
    tags:
      - 'release_*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test:
    name: 🧪 Tests
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 🖥️ Setup Virtual Display for GUI Tests
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          sleep 3

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🔧 Setup Test Environment
        run: |
          echo "QT_QPA_PLATFORM=offscreen" >> $GITHUB_ENV
          echo "QT_LOGGING_RULES=qt.qpa.xcb.warning=false" >> $GITHUB_ENV
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: 🧪 Run Tests
        env:
          DISPLAY: :99
          QT_QPA_PLATFORM: offscreen
        run: python test/ci_test_runner.py

  build:
    name: 🏗️ Build Artifacts
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: macos
          - os: ubuntu-latest
            platform: linux
    runs-on: ${{ matrix.os }}
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: 🎨 Icon/Platform Extras (macOS)
        if: matrix.platform == 'macos'
        run: |
          pip install icnsutil py2app || true

      - name: 🎨 Icon Extras (Win/Linux)
        if: matrix.platform != 'macos'
        run: pip install Pillow

      - name: 📦 Linux System Deps
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxcb-xinerama0 libxcb-cursor0

      - name: 🏗️ Build
        run: python ci_build.py

      - name: 📝 Create Release Info
        run: |
          if [[ "${{ github.ref_name }}" =~ ^release_(.+)$ ]]; then VERSION="${BASH_REMATCH[1]}"; else VERSION="0.0.0"; fi
          echo "# Finanzauswertung Ehrenamt ${VERSION}" > release_info.md
          echo "Plattform: ${{ matrix.platform }}" >> release_info.md
          echo "Build: $(date '+%Y-%m-%d %H:%M:%S')" >> release_info.md
          echo "Version: ${VERSION}" > version.txt

      - name: 📦 Collect Artifacts
        run: |
          mkdir -p artifacts
          if [ "${{ matrix.platform }}" = "windows" ]; then
            cp build/Finanzauswertung_Ehrenamt.exe artifacts/ 2>/dev/null || true
          elif [ "${{ matrix.platform }}" = "macos" ]; then
            cp build/Finanzauswertung_Ehrenamt.pkg artifacts/ 2>/dev/null || true
            cp build/Finanzauswertung_Ehrenamt.tar.gz artifacts/ 2>/dev/null || true
          else
            cp build/Finanzauswertung_Ehrenamt artifacts/ 2>/dev/null || true
          fi
          cp release_info.md artifacts/ 2>/dev/null || true
          ls -la artifacts

      - name: ⬆️ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: finanzauswertung-${{ matrix.platform }}
          path: artifacts
          retention-days: 30

  release:
    name: 📦 GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/release_')
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      - name: ⬇️ Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts
      - name: 🔍 List assets
        run: find all-artifacts -type f -maxdepth 4 || true
      - name: 🏷️ Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: all-artifacts/**
          name: "Finanzauswertung Ehrenamt ${{ github.ref_name }}"
          body: "Automatischer Release-Build für ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
