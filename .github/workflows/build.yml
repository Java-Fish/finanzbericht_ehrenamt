name: 🏗️ Build Apps for All Platforms

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Manueller Trigger

jobs:
  test:
    name: 🧪 Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: 🖥️ Setup Virtual Display for GUI Tests
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 3
        
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔧 Setup Test Environment
      run: |
        export QT_QPA_PLATFORM=offscreen
        export QT_LOGGING_RULES="qt.qpa.xcb.warning=false"
        export DISPLAY=:99
        echo "QT_QPA_PLATFORM=offscreen" >> $GITHUB_ENV
        echo "QT_LOGGING_RULES=qt.qpa.xcb.warning=false" >> $GITHUB_ENV
        echo "DISPLAY=:99" >> $GITHUB_ENV
        
    - name: 🧪 Run Tests
      run: |
        export DISPLAY=:99
        export QT_QPA_PLATFORM=offscreen
        python test/ci_test_runner.py

  build:
    name: 🏗️ Build Apps
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: windows
            executable_name: "Finanzauswertung_Ehrenamt.exe"
            icon_ext: "ico"
            
          - os: macos-latest  
            platform: macos
            executable_name: "Finanzauswertung_Ehrenamt.app"
            icon_ext: "icns"
            
          - os: ubuntu-latest
            platform: linux
            executable_name: "Finanzauswertung_Ehrenamt"
            icon_ext: "png"

    runs-on: ${{ matrix.os }}

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4

    - name: 🐍 Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: 🎨 Install Icon Tools (macOS)
      if: matrix.platform == 'macos'
      run: |
        pip install icnsutil

    - name: 🎨 Install Icon Tools (Windows/Linux) 
      if: matrix.platform != 'macos'
      run: |
        pip install Pillow

    - name: 🏗️ Build Application
      run: |
        python build.py

    - name: 📝 Create Release Info
      shell: bash
      run: |
        echo "# 📊 Finanzauswertung Ehrenamt" > release_info.md
        echo "**Version:** 1.0.0" >> release_info.md
        echo "**Build-Datum:** $(date '+%d.%m.%Y %H:%M:%S')" >> release_info.md  
        echo "**Plattform:** ${{ matrix.platform }}" >> release_info.md
        echo "**Python:** $(python --version)" >> release_info.md
        echo "" >> release_info.md
        echo "## ✨ Features" >> release_info.md
        echo "- BWA-PDF-Generierung" >> release_info.md
        echo "- CSV/Excel/ODS Import" >> release_info.md
        echo "- Quartalsauswertungen" >> release_info.md
        echo "- Sachkonto-Mapping" >> release_info.md

    - name: 📦 Prepare Artifacts
      shell: bash
      run: |
        mkdir -p artifacts
        if [ -d "build" ]; then
          cp -r build/* artifacts/ 2>/dev/null || true
        fi
        cp release_info.md artifacts/ 2>/dev/null || true
        
        # Zeige was gebaut wurde
        echo "🔍 Build-Ergebnisse:"
        find artifacts -type f -name "*" | head -20

    - name: ⬆️ Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: finanzauswertung-${{ matrix.platform }}
        path: artifacts/
        retention-days: 30

    - name: 🏷️ Create Release (Tags only)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/*
        name: "Finanzauswertung Ehrenamt ${{ github.ref_name }}"
        body_path: artifacts/release_info.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Benachrichtigung bei erfolgreichem Build
  notify:
    name: 📢 Build Notification
    needs: [test, build]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: ✅ Success Notification
      if: needs.build.result == 'success'
      run: |
        echo "🎉 Alle Builds erfolgreich!"
        echo "📱 Apps für Windows, macOS und Linux erstellt"
        
    - name: ❌ Failure Notification  
      if: needs.test.result == 'failure' || needs.build.result == 'failure'
      run: |
        echo "💥 Build fehlgeschlagen!"
        echo "🔍 Prüfe die Logs für Details"
